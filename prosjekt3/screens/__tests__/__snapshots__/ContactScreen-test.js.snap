// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AddContact screen testing renders the addContactScreen correctly 1`] = `
<View>
  <TextInput
    allowFontScaling={true}
    autoCapitalize="words"
    blurOnSubmit={false}
    keyboardType="default"
    onChangeText={[Function]}
    onSubmitEditing={undefined}
    placeholder="Full Name"
    returnKeyType="next"
    style={
      Object {
        "borderColor": "#ccc",
        "borderRadius": 4,
        "borderWidth": 1,
        "fontSize": 16,
        "height": 34,
        "margin": 20,
        "marginBottom": 0,
        "paddingHorizontal": 10,
      }
    }
    value=""
  />
  <TextInput
    allowFontScaling={true}
    onChangeText={[Function]}
    placeholder="email@example.com"
    style={
      Object {
        "borderColor": "#ccc",
        "borderRadius": 4,
        "borderWidth": 1,
        "fontSize": 16,
        "height": 34,
        "margin": 20,
        "marginBottom": 0,
        "paddingHorizontal": 10,
      }
    }
    value=""
  />
  <TextInput
    allowFontScaling={true}
    keyboardType="default"
    onChangeText={[Function]}
    placeholder="Phone number"
    style={
      Object {
        "borderColor": "#ccc",
        "borderRadius": 4,
        "borderWidth": 1,
        "fontSize": 16,
        "height": 34,
        "margin": 20,
        "marginBottom": 0,
        "paddingHorizontal": 10,
      }
    }
    value=""
  />
  <View
    accessibilityComponentType="button"
    accessibilityLabel={undefined}
    accessibilityTraits={
      Array [
        "button",
      ]
    }
    accessible={true}
    collapsable={undefined}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={
        Array [
          Object {},
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={undefined}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#007AFF",
              "fontSize": 18,
              "padding": 8,
              "textAlign": "center",
            },
          ]
        }
      >
        Add contact
      </Text>
    </View>
  </View>
</View>
`;

exports[`ContactScreen Testing render the Contact Components 1`] = `
<View>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    collapsable={undefined}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "fontSize": 18,
          "height": 44,
          "padding": 10,
        }
      }
    >
      Andreas
    </Text>
  </View>
</View>
`;

exports[`ContactScreen Testing renders the CalendarScreen 1`] = `null`;

exports[`ContactScreen Testing should show set visible Modal, and match snapshot after invoke 1`] = `null`;
